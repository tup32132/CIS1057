Notes for Textbook 

    Chapter 0
        Reasons to choose "cs"
            you like to solve problems
            you enjoy technology and being a lifelong learner
            you have good communication skills 

        Joys of the Craft
            making things of your own design 
            making things that are useful to others
            fashioning complex puzzles to a system that works
            always learning because the work is not repetitious
            working in a tractable medium 

        Difference between the majors
            Computer Science
                design and implement software
                devising new ways to use pcs
                develop effective ways to solve computing problems

            Computer Engineering
                the design and construction of pcs and pc based systems
                includes hardware, software, comms, and interactions between
                embedded systems devices that have software and hardware, such as cell phones, music players, alarms, etc.

            Computer Information Systems (Temple major is this)
                integrate tech into business and other enterpirsies to manage information securely
                understanding technical and organizational factors to get a competitive edge

            Information Technology
                meet demands of the userbase of software. 
                ensure systems work properly, are secure and are maintained. 

            Software Engineering
                discipline of developing and maintaining large software systems
                make systems viable for users for many years

        Mixed Disciplines
            Bioinformatics
                for maintaining, analyzing, and storing bio data
            
            AI
                study of system that can exhibit autonomous intelligences 
                face recognition, handwriting, speech, nlp, etc.
            
            computer forensics
                legal evidence on pcs and storage devices
            
            cryptology
                practice of hiding information 
            
            mechatronics
                combine mechanical engineering, electronic engineering, and SE to create advanced hybrid systems

            End

    Chapter 1
    
    computer: a machine that can receive, store, transform, and output data of all kinds

    1.1 Brief History of Computers
        first computer was built in 1930s by John Atanasoff and Clifford Berry to help students with nuclear physics calculations

        The first large scale electronic digitical pc called the ENIAC was completed in 1946 at UPenn, funded by the US Army. 
        It was used to compute ballistics tables, predict weather and make atomic energy calcs.

        The CPU (Central processing Unit) is a small silicon chip that contained the circuitry for the computer processor

        personal pcs for one person, larger systems such as hotels banks use mainframes, which are larger and more reliable. 

        Supercomputers are larger and faster for intense applications such as weather forecasting 

        Hardware is all the equipment used to perform calculations such as the CPU, monitor, keyboard, mouse, printer, graphics card

        Software is the programs that let us solve problems by giving the computer instructions. 

        Programming used to be done with long strings of binary (0 or 1) numbers. C makes programming easier

    1.2 Computer Hardware
        Most computers have
            main memory
            secondary memory like flash drive, hard disks
            CPU
            input devices (keyboard, mouse)
            output devices (screens, speakers)

        The user will input data with an input device into a program contained in the main memory or storage of a computer which will then be manipulated by the CPU which can store the results back on the memory which can be displayed on the output device. 

        Memory
            memory cells: an individual storage location in memory
            
            address of a memory cell: the position of a memory cell in a computers main memory 

            contents of a memory cell: the data stored in a cell, data or a program instruction

            stored program concept: the ability of a pc to store program instruction in memory for execution 

            memory cells are made up of small units. 

            Byte: the amount of storage needed for a single character
                The amount of these in each memory cell varies by computer 

            Bits: a binary digit, 0 or 1
                these make up bytes and is the smallest element a computer can deal with. 8 bits to each byte

            data storage: setting individual bits of a memory cell to 0 or 1, destroying the previous contents of the cell

            data retrieval: copying contents of a particular memory cell to another storage area for processing

            Main Memory is composed of two types
                Random Access Memory (RAM)
                    Offers temportary storage of data, programs, and resutls
                Read-Only Memory (ROM)
                    main memory part that stores programs and data permanently
                
                volatile memory: memory whose contents disappear when the pc is turned off. RAM is volatile memroy. 
            
            Secondary storage: units such as flash drives or disks that retain data even when power is off 

                disk: thin platter of metal or plaster which data is represented by magnetized spots arranged in tracks

                optical drive: device that uses a laser to access or store data on a CD or DVD. 

                Flash drive: device that plugs into USB port stores data bits as trapped electrons

                files: a named collection of data stored on a disk
                
                directory: list of names of files stored on a disk (folder)

                subdirectory: a list of the names of files that relate to a particular topic
        
            petabyte > terabyte > gigabyte > megabyte > kilobyte > byte > bit 

        CPU 
            The CPU has two roles: coordinating all computer operations and performing arithmetic and logical operations on data

            follow instructions on a program to determine what to do and controls signals to other pc componenets. 

            fetching an instruction: retrieving instruction from main memory

            the memory inside a CPU is called the register, for instructions actively being operated. 

            multiprocessor is a computer with multiple CPUs for faster speeds

        Input and Output devices
            cursor: moving place marker on the screen

            function keys: special keys on keyboard for particular operation (ex: refresh page as F5)

            mouse/touchpad: input devices that move a cursor to select operations

            icon: a picture that represents an operation

            the screen provides a temporary display, 

            hard copy: printed version of info, you should print it out.

        Computer Networks
            computers are linked together in networks so they can communicate

            Local area network (LAN): computers, printers, scanenrs, and storage devices connected by cables

            file server: the computer in a network that controls access to a secondary storage device such as a hard disk

            Wide area network (WAN): a network such as the internet that connects computers and LANS over a large geographic area
            
            The internet is the creation of the US defense ARPAnet project in 1969 which wanted to create a computer network that could operate even if partially destroyed. 

            World Wide Web: a part of the internet whose graphical user interfaces make associated network resources easily navigable. 

            GUI: pictures and menus that are displayed to allow users to select commands and data easier.

            modem: device that converts binary data to analog signals that can be transmitted between computers and over telephone lines 

            cable internet access: two way high speed transmission of internet data through two of the hundreds of channels over the coaxial cable that carries cable tv signals. 

     1.3 Computer Software
        Operating System: software that controls interaction of user and computer hardware and manages the allocation of computer resources

        Operating System   
            Loading the operating system into memory is called booting the computer
                1. Communicate with the computer user; receiving commands and completing them
                2. manage allocation of memory and processor time
                3. collect inputs from keyboard mouse etc.
                4. put program outputs on screen, printer, etc.
                5. access data from secondary storage
                6. write data to secondary storage

            OS may also control access rights and authorizations

        Application Software
            applications are software that is used for a specific task such as word processing, accounting, database management, gaming, etc.

            Users will purchase software and download from the internet. Installation is making an application available by copying it to the hard drive

        Computer Languages
            Creating software requires writing instructions or a computer to execute. Altough machine language is binary code that is understood by a specific CPU. 

            Assembly language: mnemonic code that correspond to machine language instructions

            high-level language: machine-independent programming language that combines algebraic expression and English symbols. 

            A high-level language needs to be translated to machine language. 

            compiler: software translate a high level language to machine

            source file: containing a program written in a language; input for a compiler

            syntax: rules of a programming language

            object file: file of machine language instructions that is the output of the compiler. 

            Programmer writes the code in a high level language, if the code has no syntax errors it will be compiled, saved as an object file and carried out. 

            Linker program: software that combines object files and resolves cross-references to create an executable program. 

            integrated development environment (IDE): a package that combines a word processor, compiler, linker, loader, and tools for finding errors in syntax (ex: Vscode, VIM) 
                An IDE will often use "build" to describe compiling and linking all in one.

            input data: data values scanned by a program

            program output: The lines displayed by a program (printf)

    1.4 The Software Development Method
        1. Specify the problem requirements
            State the problem clearly and gain understanding.
        2. Analyze the problem.
            identify the inputs, the outputs, and any additional constraints. 
            abstraction: the process of modeling a problem by extracting essential variables and their relationships
        3. Design the algorithm to solve the problem.
            develop a list of steps for solving a problem (algorithm) and verify it does what it intends to do.
            top-down design: breakign a problem into its major subproblems and then solving those subproblems

                common subproblems: 
                    1. getting the data
                    2. performing the computations
                    3. displaying the results
            
            stepwise refinement: development of a detailed list of steps to solve a particular step in the algorithm
            desk checking: a step-by-step simulation of the computer execution in an algorithm.

        4. Implement the algorithm.
            convert the algorithm steps into one or more statements in a programming language

        5. Test and verify the completed program.
            test the completed program using different datasets and check multiple instances to ensure it works for all cases.

        6. Maintain and update the program.
            modify programs to remove undetected errors and comply with regulations. Avoid shortcuts to ensure readability and working within company policy.

    1.5 Applying the Software Development Method (no notes)

    1.6 Professional Ethics for Computer Programmers
        Privacy and Misuse of Data
            Programming often means access to secret or sensitive data that cannot be made public.
            A programmer who illegially obtained money by falsifying information in a databae is guilty of computer fraud

        Computer Hacking
            Hacking to access unauthorized sources to sell to other agencies. Liable to be prosecuted 
            Attaching harmful code, called a virus, that spreads through a computers disk memory and disrupts the computer or erases information
            A computer worm is a virus that multiplies itself on other network computers
        
        Plagiarism and Software Piracy
            Using someone else's programs without permission is also unprofessional and can result in a lawsuit
            Plagiarism in the same way you cannot copy other people's essays

            Software piracy is copying software for use on a nother computer. It is unlawful and increases liklihood of getting a virus. 
        
        Misuse of a Computer Resource
            Computer access is usually given for particular purpose, i.e. working on classwork. 
            Should not loan to others or used for unintended purposes. 


    Chapter 2: Overview of C
    C was introduced in 1972 by Dennis Ritchie at AT&T Bell Labs. It was designed to write the UNIX operating system, originally used for systems programming. 

    Its power and flexibility has lead it to be used for many different applications. 

        2.1 C Language Elements 
            Programs resemble everyday English. 
                
            Preprocessor Directives
                Commands that begin with # that provide an instruction to the preprocessor

                preprocessor: a system progrma that modifies a C program prior to compilation.

                C explicitly defines only a couple of operations and needs libraries to be included for proper implementation.

                library: a collection of useful functions and symbols that may be accessed by a program

                constant macro: a name that is replaced by a particular constant value before the program is sent to a compiler

                comment: text beginning with /* and ending with */ that provides supplemental info but will be ignored by the preprocessor and compiler

            Syntax Displays for Preprocessor Directives
                #include - tell preprocessor where to find the meaning of standard identifiers used in the program
                #define - tell the processor a constant value to replace each name with.
            
            Function Main
                every C program has a main function. The {} is the body of the function.
                
                The body contains two things: declarations and executable statements
                    declarations: the part of a profram that tells the compiler the names of memory cells in a program
                    
                    executable statements: the program lines that are converted to machine langauge instructions and executed by the computer

            Reserved Words
                reserved word: a word with special meaning in C
                    examples include int, void, double, return
            
            Standard Identifiers
                standard identifiers: a word having special meaning but one that a programmer may redefine (although this is not recommended)
                    examples include printf, scanf

            User-Defined Identifiers
                Users are able to choose identifiers to name meory cells that hold data and results.
                    1. identifier must consist of only letters, digits, and underscores
                    2. Cannot begin with a digit
                    3. A C reserved word cannot be used in an identifier
                    4. an identifier defined in C standard library should not be redefined

                Some ANSI C compilers do not consider two identifiers different if they do not become unique within the first 31 characters
            
            Uppercase and Lowercase Letters
                case matters! Identifiers are case-sensitive so "RATE" and "rate" are completely different. 
                
                A widely adopted style in C is to use all uppercase letters in the names of constant macros, while using lowercase letters for all oter identifiers.

            Program Style
                Programs are going to be read by others a lot. Make them legible and easy to understand
                    Pick meaningful names for identifiers
                    Underscores help with readability for identifiers with multiple words
                    dont choose names that are similar to each other to avoid typos
            
        2.2 Variable Declarations and Data Types
            Variable Declarations
                Variable: a name associated with a memory cell whose value can change

                Variable Declarations: statements that communicate to the compiler the names of variables in the program and the kind of information stores in each variable

                Declarations start with a type of variable (int, double, float)

                You must declare all variables in a C program!

            Data Types 
                A set of values and operations that can be performed on those values is a data type. 

                objects of a data type can be variables or constants. 
                    constants are always positive- the negation operator (-) acts on it and isn't considered part of the constant
                
                Data type int
                    integers are whole numbers. Because memory cells are only so big, ANSI C specifies the range of the data type; values between -32767 to 32767
                
                Data type double
                    doubles are real numbers with an integral part and a fractional part that are separated by a decimal point
                    can be written in scientific notation
                    
                    This data type does not include all real numbers- some are too large or too small and others cannot be represented precisely. 
                
            Differences between Numeric Types
                Why have more than one numeric type? Cant double just be used for integers?
                    Integers can be processed faster due to less storage space
                    integer operations are more precise, as doubles can be subjected to rounding error 

                    The way doubles and ints are stored in binary strings also are different. 
                        doubles take more bytes to store.
                        Ints are represented by binary numbers (ex: 13 is 01101)

                        doubles are represented in 3 parts
                            sign is either 0 or 1, for postive or negative, respectively
                            The mantissa is a binary fraction between .5 and 1.0
                            The exponent is an integer
                            real number = mantissa * 2^exponent
                        
                        doubles can represent any number from 10^-37 to 10^37
                            absolute chonker numbers
                        
                        ANSI C also defines 3 types of floating-point types that differe in the their memory requirements; float, double, long double
                            floats must have at least 6 decimal digits
                            double and long double need 10 
                        
            Data Type char
                characters are individual values- a letter, digit, or special symbol
                    enclosed in apostrophes "a" "5"

                characters are represented in memory as an integer. The value is stored as determined by the conpiler. 
                    The ASCII code is the most common (The American Standard Code for Information Intervhange)
                        Digit characters '0' to '9' are stored 48 - 57
                        Uppercase characters are stored 65 - 90
                        lowercase letters are 97 - 122
                        all printable characters (including space ' ' and asterisk '*') are 32 - 126 ('~')
                
        2.3 Executable Statements
            Executable statements are the ones used to write or code the algorithm and its refinements 

            Programs in Memory  
                Prior to running a program, the memory cells are labelled "?" and are not defined. 
                After running, those values will be replaced with the ones used in the program. 

            Assignment Statements
                An instruction that stores a value or computational result in a variable is an assignment statement
                The = is the assignment operator in C
                x = x + 1 will remove the previous value of x and replace it with x + 1

            Assignment to char Varibale
                pretty easy, just use the = and assign.
                next_letter = 'A'

            Input/Output Operations and Functions
                input operation: an instruction that copies data from an input device into memory

                output operation: an instruction that displays information stored in memory

                input/output function: a C function that performs an input or output function

                Most common input is scanf()
                Most common output is printf()

                function call: calling or activating a function
            
            The printf() Function
                the function call consists of two parts; the function name and argument
                    function argument: enclosed in parentheses following the function name, provides info needed by the function
                        format string: in a call to printf, a string of characters in quotes which specifies the form of the output line
                        print list: in the printf call, the variables whose values are displayed
                        placeholder: a symbol beginning with % in a format string that indicates where to display the output value
                        newline escape sequence: \n, which is used to terminate an output line and move to the next line in a format string. 

                    multiple placeholders
                        for each variable in the print list, there needs to be a placeholder. They will be matched in left to right order

                    \n
                        cursor: a moving place marker that indicates the next position on the screen where information will be displayed

                        can use \n in the middle of lines, to end, and to start lines

                    displaying prompts
                        printf is perfect for displaying prompts
                            prompt: a message displayed to indicate what data to enter and in what form
            
            The scanf() function    
                scanf() calls to copy data into the a variable from an input device. 
                
                use a placeholder such as %lf to show what data type is going to be entered.

                You will need to use the & character, which is the address character, prior to the variable to be collected. 
                    The & is the address-of operator  and tells scanf where to find each variable 
                
            The return Statement
                the return (0); brings control from the program to the OS
                    the 0 is considered the result of the function "main"'s execution, which indicates it ran without error
                    
        2.4 General Form of a C Program
                Begin with preprocessor Directives
                define the main function and provide declarations of all variables to be used
                add statements that are translated to machine language and will be executed
                one statement per line to improve readability
            
            Program Style
                Spaces in programs are useful. The compiler ignores extra space and lines between words and symbols but they are helpful for readability. 
                always leave spaces after commas, before and after operators and indent the body of main

            Comments in a Program  
                program documentation: ifo that enhances understandability of a program
                it is helpful to comment throughout code to explain variables, unique functions, etc.

            Program Style (Using Comments)
                Each program should begin with a header that specifies: 
                    Programmer name
                    date of current version
                    a brief program description
                    course number/instructor if for a class assignment

                Before each step in the initial algorithm, write a comment that summarizes the algorithm step

        2.5 Arithmetic Expressions
            You can manipulate values using +,-,*,/, and %
                % is for calculating remainder (7 % 2 = 1) 

                m = (m/n)*n + (m%n)
            
            Data Type of an Expression
                the data type of an expression is the result of the data type of its' operands
                    int must be operands both are also int, otherwise its a double
                        mixed-type expression: an expression with operands of different types
            
            Mixed-Type Assignment Statement 
                mixed-type assignment: the expression being evaluated and the variable being assigned have different data types
            
            Type Conversion Through Casts
                type cast: converting an expression to a different type by writing the desired type in parentheses in front of the expression

            Characters as Integers  
                Since each character has an ASCII integer value, you can convert characters and integers.

            Expressions with Multiple operators 
                Unary operators: only one operand. Ex: - or +
                Binary operators: Take two operands. Ex: a + b, a * b

                PEMDAS dont forget rules.

            Writing Mathematical Formulas in C
                must always use * operator
                parentheses help with division since they have to be on the same line.

            Numerical Inaccuracies
                representational error: an error due to coding a real number as a finite number of digits
                    aka round off errors
                
                cancellation error: an error resulting from applying an arithmetic operation to operands of vastly different magnitudes- the effect of the smaller operand is lost. 

                arithmetic underflow: If the result of an operation is so small sometimes it will get lost and represented as zero. 

                arithmetic overflow: If the result is too big it can also get lost.

                A lot of this depends on your compiler. 

        2.6 Formatting Values of Type int
            field width: the number of columns used to display a value

            Formatting Values of Type double   
                need field width as well as number of decimal places to incldue. 
                    %6.2f means that x will be displayed to the accuracy of 2 decimal places in 6 columns. 

                    it will use normal rounding rules.

            Program Style- Eliminating Leading Blanks
                you should not have leading blanks for fun, get rid of them if you don't need them.

        2.7 Interactive Mode, Batch Mode, and Data files   
                    interactive mode: a mode of program execution where the user types in data to respond to prompts

                    bath mode: a mode of program execution in which the program scans data from a previously prepared data file 

                Input Redirection
                    You are able to use the command line to instruct a program to where it can find the data it needs   
                        in UNIX, using <mydata.txt at the end of a command line would tell your program to find the data there.

                Program Style Echo Prints versus prompts
                    Using an echo print to replace any prompts for a batch file is a good way to make sure your scanf worked properly

                Output Redirection  
                    You can also redirect outputs to a file instead of a screen if thats ideal for You
                    >myoutput.txt at the end of a command would give you the output in a dandy little text file

        2.8 Common Programming errors
                debugging: removing errors from a program

            Syntax errors   
                syntax error: when the program violates a grammar rule of C and it is detected by the compiler as it attempts to translate

            Run-Time errors 
                run-time errors: an attempt to perform an invaldi operation detected during program execution
            
            Undetected Errors:
                some errors do not cause a C program to break. 
                    You should be able to predict the result of your C program so if you do not get that, you can question the code
                
                A common error is the input of character and numeric data. Make sure you notice the different treatment of characters by scanf and ensure you run things properly

            Logic Errors    
                Usually due to an incorrect algorithm. 
                    always make sure your algorithm makes sense before it is typed into C.


    Chapter 3 Top-Down Design with Functions
    
        3.1  Building Programs from Existing Information
            Programmers generally don't start with a blank slate and will build off existing programs or public access.

            This section is mostly example code similar to Assignment 1.
             
        3.2 Library Functions   
            Predefined functions and code reuse 
                "why reinvent the wheel?"
                C code has predefined functions available in libraries such as math.h and stdio.handwriting
                 
        3.3 Top-Down Design and Structure Characters   
                top-down design: a problem solving method which involves breakign a provlem into major subproblems to derive the solution to the original problem
                structure chart: a documentation tool that shows the relationships among the subproblems of a problem

        3.4 Functions Without Arguments
            Defining your own functions is a way of doing top-down design
            Function Prototypes
                Just like identifiers, a function must be declared before being referenced. 
                    One way to do so is to insert a function prototype before the main function.   
                        The prototype tells the C compiler the data type of the function, its name and info about the args expected.

                    void functions: a function that does not return a value.
                        ex: void draw_circle(void)
                            this means the function expects no args and will not return a value.

            Function Definitions
                Prototypes specify the arguments needed, but they do not specify the operation.
                    That is what the definition is for. 
                        The definition is the part in the braces which allows for operations to be conducted.
                            Void functions have no "return" value
            
            Placement of Functions in a Program 
                subprograms prototype typically preceed the main() function in a program while the definitions follow the main function

            Program Style (Use of Comments in a Program with Functions)
                each function should have a comment that describes its' purpose 
            
            Order of Execution of Function subprograms and Main Function    
                The prototype being ahead of the main function allows the compiler to translate a call to that function
                    The compiler will run the subprogram and pick back up in the main until the end of main or another function call. 
            
            Advantages of Using Function subprograms    
                Easier to organize things, simplify compelx probelsm
                    procedural abstraction: the main might just have easy functions that are broken down into their subprograms.
                        A programming texhnique in which a main function consists of a sequence of function calls and each function is implemented separately.
                        We can also reuse subprograms multiple times in the same program. 
            
            Displaying User instructions    
                Subprograms can be used for displaying user instructions like in the header function for your lab assignments.

        3.5 Functions with Input Arguments  
                input arguments: arguments used to pass information into a function subprogram
                output arguments: arguments used to return results to the calling function

                void Functions with Input arguments
                    actual argument: an expression inside the parenthesis of a function call
                    formal parameter: an identifier that represents a corresponding actual argument in a function definition

                Function with input arguments and a single result
                    (data type)function (args) will put out one result of the assigned data type
                    double find_circum(double radius)

                Program Style (Function Interface Comment)
                    precondition: a condition assumed to be true before a function call
                    postcondition: a condition assumed to be true after a function call

                    It is normal to include these statements in a function prototype to help with clarity

                Functions with Multiple arguments
                    Multiple arguments can be assigned and used
                
                Argument List Correspondence
                    You always have to include the correct number of args in a function call and they must be in the correct order
                        assignment of actual args to the formal parameter also should not result in any loss of info. 
                
                The Function Data area  
                    The function call will make all args and local variables used in it. 
                        All of these will be lost when the function terminates which allows for its reuse

                Testing Functions Using Drivers
                    driver: a short function written to test another function by defining its arguments, calling it, and displaying its results
        
        3.6 Introduction to Computer Graphics (optional)
                text mode: a display mode in which a C program displays only characters
                graphics mode: a display mode in which C programs draw graphics patterns and shapes in an output window

                Many languages have graphics libraries. C does not have a standard one but many have been developed. 
                    This text teached WinBGIm
                
                Composition of a window
                    pixel: a picture elements on a computer screen
                        (0,0) is the top left corner of a screen.
                    
                Some Common Graphics Functions
                    getmaxwidth() get maxheight() will return display size
                
                You will need to include graphics.h at the preproccessor Directives
                    getch() is a function that pauses the program until the user presses a key 
                
                Program Style (Camelback Notation)
                    in graphics sections, we tend to use camelback notation for variables. 
                        bigX vs big_x 
                        myLastName vs my_last_name
                
                Background Color and Foreground Color
                    black and white are the default values for background and foreground respectively
                        background color: default color for all pixels in a display window
                        foreground color: new color of pixels that are part of a graphics object in a display window

                    you can use setbkcolor() and setcolor() to set different default colors for background and foreground
                
                Drawing Rectangles 
                    use rectangle(x1, y1, x2, y2); for Rectangles
                
                Drawing Circles, Ellipses, and Arcs
                    you can use circle(x, y, radius); 
                                arc( x, y, 0, 180, radius); where 0 and 180 are the starting and ending angle of the arc.
                                ellipse(x, y, 0, 360, radius, 2 * radius) where 2*radius is the vertical radius.
                
                Program Style (Writing General Graphics Programs)
                    generally it is best to use general graphics over fixed graphics so it can be displayed in various windows
                        it is easy to do. Just use getmaxY and getmaxX and divide by a value to get the fixed value you want. That way at different max you still get the same image.

                    Drawing Filled Figures
                        setfillstyle() set fill pattern to red slahes until you change it with another function call. 
                        floodfill(x , y , COLOR) will use fill pattern already determined on an area of the screen containing point (x,y) bounded by white linges. 
                        bar() is the rectangle() function but it created a solid filled rectangle instead. 
                    
                Program Pitfall (Incorrect Order of Function Calls Draws Over Earlier Results)
                    Order of Execution is very important all the time.
                        if you call functio bar before caling flood fill, floodfill will overwrite the bar color, 
                
                Pie Slices and Filled Ellipses  
                    pieslice() will filled a section of a circle
                    fillellipse() draws filled ellipse or circle

                Adding Text to Drawings
                    in graphics mode you cannot use printf you have to draw them 
                    outtextxy(getmaxx()) / 3, getmaxy() - 20, "PIRATE WITH AN EYEPATCH");  
                        draws each character in a string starting at the pixel whos x-y coordinates are speicified in first two parameters. 
            
            3.7 Common Programming Errors   
                always remember #include in your preproccessor Directives  

                remember the acronym NOT
                    Number of arguments
                    Order of arguments
                    Type of data

    Chapter 4 Selection Structures: if and switch statements


    Chapter 5
     
